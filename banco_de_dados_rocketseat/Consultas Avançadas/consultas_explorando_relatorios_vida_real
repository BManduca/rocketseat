-- ##############################
-- RELATÓRIOS DA VIDA REAL
-- ##############################

SELECT
  COUNT(*) AS total_products
FROM products;

SELECT
  COUNT(*) AS total_customers
FROM customers;

SELECT
  COUNT(*) AS total_orders
FROM orders;

SELECT
  COUNT(*) AS total_items
FROM order_items;

SELECT
  COUNT(*) AS total_categories
FROM categories;

-- Quais foram os 5 produtos mais vendidos?
-- Agrupar em order_items por product_id e ordenar por soma de quantity
SELECT product_id,
    SUM(quantity) AS total_unidades_vendidas
  FROM order_items
GROUP BY product_id
ORDER BY SUM(quantity) DESC
LIMIT 5;

-- Buscar a receita mensal em 2024
-- Agrupar em orders por mês (usando DATE_TRUNC) e somar total_amount
SELECT DATE_TRUNC('month', order_date) AS mes_ano,
      SUM(total_amount) AS receita_total_mes
  FROM orders
WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31'
GROUP BY DATE_TRUNC('month', order_date)
ORDER BY DATE_TRUNC('month', order_date);

-- buscar quantos clientes realizaram mais de 3 compras
-- Agrupar em orders por customer_id e depois filtrar com HAVING

SELECT customer_id,
      COUNT(order_id) AS total_compras
  FROM orders
GROUP BY customer_id
HAVING COUNT(order_id) >= 3
ORDER BY COUNT(order_id) DESC;

-- Buscar por produtos vendidos em Janeiro e Fevereiro de 2024 com mais de 100 unidades
-- Primeiro, filtrar os order_id de jan/fev em orders, depois agrupar em order_items
SELECT product_id,
      SUM(quantity) AS total_jan_fev
  FROM order_items
WHERE order_id IN (
      SELECT order_id
          FROM orders
      WHERE order_date BETWEEN '2024-01-01' AND '2024-02-29'
    )
GROUP BY product_id
HAVING SUM(quantity) >= 5
ORDER BY SUM(quantity) DESC;

-- Buscar pedidos "SHIPPED" de março de 2024, ordenados por total_amount descendente
SELECT order_id,
      customer_id,
      order_date,
      total_amount,
      status
  FROM orders
WHERE status = 'SHIPPED'
  AND order_date BETWEEN '2024-03-01' AND '2024-03-31'
ORDER BY total_amount DESC;

-- Buscar quantas unidades do produto 5 foram vendidas de maio a outubro de 2024
SELECT SUM(quantity) AS unidades_produto_10
    FROM order_items
  WHERE product_id = 5
    AND order_id IN (
      SELECT order_id
        FROM orders
      WHERE order_date BETWEEN '2024-05-01' AND '2024-10-31'
      ORDER BY order_date
    )


-- Buscar receita acumulada por trimestre de 2024
SELECT DATE_TRUNC('quarter', order_date) AS trimestre,
      SUM(total_amount) AS receita_trimestre
    FROM orders
  WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31'
  GROUP BY DATE_TRUNC('quarter', order_date)
  ORDER BY DATE_TRUNC('quarter', order_date);


-- Buscar a média de Ticket(valor médio de pedido) por mês em 2024
SELECT DATE_TRUNC('month', order_date) AS mes_ano,
    ROUND(AVG(total_amount), 2) AS ticket_medio
  FROM orders
WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31'
GROUP BY DATE_TRUNC('month', order_date)
ORDER BY DATE_TRUNC('month', order_date);

-- Buscar número de pedidos e receita total por dia nas duas primeiras semanas de junho/2024
SELECT order_date,
        COUNT(order_id) AS total_pedidos,
        SUM(total_amount) AS receita_diaria
  FROM orders
WHERE order_date BETWEEN '2024-06-01' AND '2024-06-15'
GROUP BY order_date
ORDER BY order_date;


-- ##############################
-- Subconsultas e EXISTS IN
-- ##############################

-- Buscar mostrar todos os pedidos feitos por clientes que moram em 'São Paulo'
SELECT
    o.order_id,
    o.customer_id,
    o.order_date,
    o.total_amount
  FROM orders AS o
  WHERE o.customer_id IN (
    SELECT c.customer_id
    FROM customers AS c
    WHERE c.city = 'Sao Paulo'
  )
  ORDER BY o.order_date;


select * from orders;
select * from customers WHERE city = 'Sao Paulo';


-- Buscar todos os clientes que tem ao menos um pedido com status = 'DELIVERED'
SELECT
    c.customer_id,
    c.first_name,
    c.last_name
  FROM customers c
  WHERE EXISTS (
    SELECT 1
    FROM orders o
    WHERE o.customer_id = c.customer_id
      AND o.status = 'DELIVERED'
  )
ORDER BY c.customer_id;

-- Buscar os produtos que ainda nunca foram vendidos (não aparecem em nenhum order_items)
SELECT
    p.product_id,
    p.product_name,
    p.price
  FROM products p
  WHERE NOT EXISTS (
    SELECT 1
    FROM order_items oi
    WHERE oi.product_id = p.product_id
  )
ORDER BY p.product_name;

SELECT * FROM products;


-- ##############################
-- Case e Filter
-- ##############################

-- Buscar o total faturado por status (usando CASE)

SELECT 
    o.status,
    SUM(CASE WHEN o.status = 'DELIVERED' THEN o.total_amount ELSE 0 END) AS total_entregue,
    SUM(CASE WHEN o.status = 'PENDING' THEN o.total_amount ELSE 0 END) AS total_pendente,
    SUM(o.total_amount) AS total_geral
FROM orders o
GROUP BY o.status;


-- Buscar total de faturamento pago e pendente por mês (usando FILTER)
SELECT
    DATE_TRUNC('month', o.order_date) AS mes,
    SUM(o.total_amount) AS total_geral,
    SUM(o.total_amount) FILTER (WHERE o.status = 'DELIVERED') AS total_entregue,
    SUM(o.total_amount) FILTER (WHERE o.status = 'PENDING') AS total_pendente
FROM orders o
GROUP BY DATE_TRUNC('month', o.order_date)
ORDER BY mes;